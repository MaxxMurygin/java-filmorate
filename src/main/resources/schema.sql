CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	ID INTEGER NOT NULL,
	EMAIL CHARACTER VARYING(255) NOT NULL,
	LOGIN CHARACTER VARYING(255) NOT NULL,
	NAME CHARACTER VARYING(255),
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS PUBLIC.RATING (
	ID SMALLINT NOT NULL,
	NAME CHARACTER LARGE OBJECT(10) NOT NULL,
	CONSTRAINT RATING_PK PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
	ID INTEGER NOT NULL,
	NAME CHARACTER VARYING(255) NOT NULL,
	DESCRIPTION CHARACTER VARYING(255),
	RELEASE_DATE DATE NOT NULL,
	DURATION SMALLINT NOT NULL,
	RATING_ID SMALLINT NOT NULL,
	POPULARITY INTEGER,
	CONSTRAINT FILMS_PK PRIMARY KEY (ID),
	CONSTRAINT FILMS_RATING_FK_1 FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.RATING(ID) ON DELETE SET NULL ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	ID SMALLINT NOT NULL,
	NAME CHARACTER VARYING(255) NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
	FILM_ID INTEGER,
	GENRE_ID SMALLINT,
	CONSTRAINT FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(ID),
	CONSTRAINT FILM_GENRE_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(ID)
);
CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
	USER_ID INTEGER,
	FILM_ID INTEGER,
	CREATED_AT TIMESTAMP NOT NULL,
	IS_LIKE BOOLEAN NOT NULL,
	CONSTRAINT LIKES_USERS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID),
	CONSTRAINT LIKES_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(ID)
);
CREATE TABLE IF NOT EXISTS PUBLIC.FOLLOWS (
	FOLLOWING_USER_ID INTEGER NOT NULL,
	FOLLOWED_USER_ID INTEGER NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL,
	IS_CONFIRMED BOOLEAN NOT NULL,
	CONSTRAINT FOLLOWS_USERS_FK FOREIGN KEY (FOLLOWING_USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOLLOWS_USERS_FK_1 FOREIGN KEY (FOLLOWED_USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
