CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING(255) NOT NULL,
	LOGIN CHARACTER VARYING(255) NOT NULL,
	NAME CHARACTER VARYING(255),
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT EMAIL_UNIQUE UNIQUE (EMAIL),
	CONSTRAINT LOGIN_UNIQUE UNIQUE (LOGIN),
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS EMAIL_UNIQUE_INDEX_4 ON PUBLIC.USERS (EMAIL);
CREATE UNIQUE INDEX IF NOT EXISTS LOGIN_UNIQUE_INDEX_4 ON PUBLIC.USERS (LOGIN);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_4 ON PUBLIC.USERS (USER_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.RATING (
	RATING_ID SMALLINT AUTO_INCREMENT,
	RATING_NAME CHARACTER LARGE OBJECT(10) NOT NULL,
	CONSTRAINT RATING_PK PRIMARY KEY (RATING_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_8 ON PUBLIC.RATING (RATING_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
	FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(255) NOT NULL,
	DESCRIPTION CHARACTER VARYING(255),
	RELEASE_DATE DATE NOT NULL,
	DURATION SMALLINT NOT NULL,
	RATING_ID SMALLINT,
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILMS_RATING_FK_1 FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.RATING(RATING_ID) ON DELETE SET NULL ON UPDATE CASCADE
);
CREATE INDEX IF NOT EXISTS FILMS_RATING_FK_1_INDEX_3 ON PUBLIC.FILMS (RATING_ID);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_3 ON PUBLIC.FILMS (FILM_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRES (
	GENRE_ID SMALLINT NOT NULL AUTO_INCREMENT,
	GENRE_NAME CHARACTER VARYING(255) NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_7 ON PUBLIC.GENRES (GENRE_ID);

CREATE TABLE IF NOT EXISTS  PUBLIC.FILM_GENRE (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID SMALLINT NOT NULL,
	CONSTRAINT FILM_GENRE_UNIQUE UNIQUE (GENRE_ID,FILM_ID),
	CONSTRAINT FILM_GENRE_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILM_GENRE_GENRES_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRES(GENRE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE INDEX IF NOT EXISTS  FILM_GENRE_FILMS_FK_INDEX_7 ON PUBLIC.FILM_GENRE (FILM_ID);
CREATE INDEX IF NOT EXISTS  FILM_GENRE_GENRES_FK_INDEX_7 ON PUBLIC.FILM_GENRE (GENRE_ID);
CREATE UNIQUE INDEX IF NOT EXISTS  FILM_GENRE_UNIQUE_INDEX_7 ON PUBLIC.FILM_GENRE (FILM_ID,GENRE_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
	USER_ID INTEGER NOT NULL,
	FILM_ID INTEGER NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL,
	IS_LIKE BOOLEAN NOT NULL,
	CONSTRAINT LIKES_UNIQUE UNIQUE (FILM_ID,USER_ID),
	CONSTRAINT LIKES_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT LIKES_USERS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE INDEX IF NOT EXISTS LIKES_FILMS_FK_INDEX_4 ON PUBLIC.LIKES (FILM_ID);
CREATE UNIQUE INDEX IF NOT EXISTS LIKES_UNIQUE_INDEX_4 ON PUBLIC.LIKES (USER_ID,FILM_ID);
CREATE INDEX IF NOT EXISTS LIKES_USERS_FK_INDEX_4 ON PUBLIC.LIKES (USER_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.FOLLOWS (
	FOLLOWING_USER_ID INTEGER,
	FOLLOWED_USER_ID INTEGER,
	CREATED_AT TIMESTAMP NOT NULL,
	IS_CONFIRMED BOOLEAN DEFAULT FALSE NOT NULL,
	CONSTRAINT FOLLOWS_UNIQUE UNIQUE (FOLLOWING_USER_ID,FOLLOWED_USER_ID),
	CONSTRAINT FOLLOWS_USERS_FK FOREIGN KEY (FOLLOWING_USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FOLLOWS_USERS_FK_1 FOREIGN KEY (FOLLOWED_USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE UNIQUE INDEX IF NOT EXISTS FOLLOWS_UNIQUE_INDEX_2 ON PUBLIC.FOLLOWS (FOLLOWING_USER_ID,FOLLOWED_USER_ID);
CREATE INDEX IF NOT EXISTS FOLLOWS_USERS_FK_1_INDEX_2 ON PUBLIC.FOLLOWS (FOLLOWED_USER_ID);
CREATE INDEX IF NOT EXISTS FOLLOWS_USERS_FK_INDEX_2 ON PUBLIC.FOLLOWS (FOLLOWING_USER_ID);
